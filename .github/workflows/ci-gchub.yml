name: CI

on:
  push:
    branches: [main, jb-gold3-v1]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: gchub_test
          POSTGRES_USER: gchub
          POSTGRES_PASSWORD: gchub
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d gchub_test"
          --health-interval=5s --health-timeout=5s --health-retries=20
    strategy:
      matrix:
        python-version: [3.13]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install django; fi
      - name: Configure test Postgres env
        run: |
          echo "TEST_PG_NAME=gchub_test" >> $GITHUB_ENV
          echo "TEST_PG_USER=gchub" >> $GITHUB_ENV
          echo "TEST_PG_PASSWORD=gchub" >> $GITHUB_ENV
          echo "TEST_PG_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "TEST_PG_PORT=5432" >> $GITHUB_ENV

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: gchub_db.test_settings
          TEST_PG_NAME: ${{ env.TEST_PG_NAME }}
          TEST_PG_USER: ${{ env.TEST_PG_USER }}
          TEST_PG_PASSWORD: ${{ env.TEST_PG_PASSWORD }}
          TEST_PG_HOST: ${{ env.TEST_PG_HOST }}
          TEST_PG_PORT: ${{ env.TEST_PG_PORT }}
        run: |
          for i in {1..30}; do pg_isready -h 127.0.0.1 -p 5432 -U postgres && break || sleep 2; done
          python manage.py test --pattern='test*.py' --top-level-directory='.' -v2 --settings=gchub_db.test_settings
