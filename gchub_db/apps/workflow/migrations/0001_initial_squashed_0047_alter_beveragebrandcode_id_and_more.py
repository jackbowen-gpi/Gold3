# Generated by Django 5.2.6 on 2025-09-11 06:01

import django.db.models.deletion
import localflavor.us.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("workflow", "0001_initial"),
        ("workflow", "0002_auto_20180525_1135"),
        ("workflow", "0003_auto_20180601_1533"),
        ("workflow", "0004_itemcatalog_product_board"),
        ("workflow", "0005_auto_20181024_1548"),
        ("workflow", "0006_auto_20190104_1658"),
        ("workflow", "0007_auto_20190208_1410"),
        ("workflow", "0008_itemcatalog_comments"),
        ("workflow", "0009_job_type"),
        ("workflow", "0010_jobcomplexity"),
        ("workflow", "0011_auto_20190625_1125"),
        ("workflow", "0012_auto_20191107_1639"),
        ("workflow", "0013_auto_20200208_1021"),
        ("workflow", "0014_prooftracker"),
        ("workflow", "0015_prooftracker_xml_filename"),
        ("workflow", "0016_prooftracker_proofer"),
        ("workflow", "0017_auto_20200528_1726"),
        ("workflow", "0018_auto_20200618_1408"),
        ("workflow", "0019_auto_20200629_1026"),
        ("workflow", "0020_auto_20200818_1326"),
        ("workflow", "0021_auto_20200825_1008"),
        ("workflow", "0022_auto_20201021_1348"),
        ("workflow", "0023_job_graphic_specialist"),
        ("workflow", "0024_auto_20210121_0915"),
        ("workflow", "0025_auto_20210126_1331"),
        ("workflow", "0026_item_kd_press"),
        ("workflow", "0027_colorwarning_notes"),
        ("workflow", "0028_job_carton_type"),
        ("workflow", "0029_auto_20220119_1012"),
        ("workflow", "0030_auto_20220119_1342"),
        ("workflow", "0031_substrate"),
        ("workflow", "0032_item_substrate"),
        ("workflow", "0033_item_gcr"),
        ("workflow", "0034_auto_20220215_0905"),
        ("workflow", "0035_auto_20220215_1042"),
        ("workflow", "0036_auto_20220217_1042"),
        ("workflow", "0037_auto_20220329_0929"),
        ("workflow", "0038_auto_20220524_1050"),
        ("workflow", "0039_item_proof_type_notes"),
        ("workflow", "0040_auto_20220714_1112"),
        ("workflow", "0041_auto_20220803_1325"),
        ("workflow", "0042_item_ecg"),
        ("workflow", "0043_job_duplication_type"),
        ("workflow", "0044_item_render"),
        ("workflow", "0045_auto_20250223_2048"),
        ("workflow", "0046_merge_0045_auto_20240611_1949_0045_auto_20250223_2048"),
        ("workflow", "0047_alter_beveragebrandcode_id_and_more"),
    ]

    dependencies = [
        ("bev_billing", "0001_initial"),
        ("color_mgt", "0001_initial"),
        ("item_catalog", "0001_initial"),
        ("qad_data", "0001_initial"),
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BeverageBrandCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BeverageCenterCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BeverageLiquidContents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ChargeCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "Charge Categories",
            },
        ),
        migrations.CreateModel(
            name="ChargeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("base_amount", models.FloatField()),
                (
                    "rush_type",
                    models.CharField(
                        choices=[
                            ("NONE", "None"),
                            ("FSBMULTH", "Foodservice High Multiplier"),
                            ("FSBMULTL", "Foodservice Low Multiplier"),
                        ],
                        max_length=8,
                    ),
                ),
                ("adjust_for_colors", models.BooleanField(default=False)),
                ("adjust_for_quality", models.BooleanField(default=False)),
                ("extra_amount", models.FloatField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.chargecategory",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
            ],
            options={
                "verbose_name_plural": "Charge Types",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "num_in_job",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "creation_date",
                    models.DateTimeField(auto_now_add=True, verbose_name=b"Date Entered"),
                ),
                ("item_type", models.CharField(blank=True, max_length=100)),
                ("upc_number", models.CharField(blank=True, max_length=255)),
                ("upc_ink_color", models.CharField(blank=True, max_length=20)),
                ("po_number", models.CharField(blank=True, max_length=20)),
                ("path_to_file", models.CharField(blank=True, max_length=255)),
                ("item_status", models.CharField(default=b"Pending", max_length=100)),
                (
                    "preflight_date",
                    models.DateField(blank=True, null=True, verbose_name=b"preflight date"),
                ),
                ("preflight_ok", models.BooleanField(default=False)),
                (
                    "electronic_proof_date",
                    models.DateField(blank=True, null=True, verbose_name=b"electronic proof date"),
                ),
                (
                    "file_delivery_date",
                    models.DateField(blank=True, null=True, verbose_name=b"file delivery date"),
                ),
                ("case_pack", models.IntegerField(blank=True, null=True)),
                ("press_change", models.BooleanField(default=False)),
                ("annual_use", models.IntegerField(blank=True, null=True)),
                ("wrappable_proof", models.BooleanField(default=False)),
                ("mock_up", models.BooleanField(default=False)),
                ("label_color", models.CharField(blank=True, max_length=255)),
                ("noise_filter", models.BooleanField(default=True)),
                (
                    "quality",
                    models.CharField(
                        blank=True,
                        choices=[(b"A", b"A"), (b"B", b"B"), (b"C", b"C")],
                        max_length=1,
                    ),
                ),
                (
                    "fsb_nine_digit",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "fsb_nine_digit_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name=b"fsb nine digit creation date",
                    ),
                ),
                ("wrin_number", models.CharField(blank=True, max_length=255)),
                ("sap_number", models.CharField(blank=True, max_length=25)),
                ("bom_number", models.CharField(blank=True, max_length=255)),
                ("floor_stock", models.BooleanField(default=False)),
                ("replaces", models.CharField(blank=True, max_length=255, null=True)),
                ("overdue_exempt", models.BooleanField(default=False)),
                ("overdue_exempt_reason", models.CharField(blank=True, max_length=500)),
                ("file_out_exempt", models.BooleanField(default=False)),
                (
                    "file_out_exempt_reason",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "length",
                    models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True),
                ),
                (
                    "width",
                    models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True),
                ),
                (
                    "height",
                    models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True),
                ),
                ("ect", models.IntegerField(blank=True, null=True)),
                (
                    "last_modified",
                    models.DateTimeField(auto_now=True, verbose_name=b"Date Last Modified"),
                ),
                ("plant_comments", models.CharField(blank=True, max_length=500)),
                (
                    "plant_review_date",
                    models.DateField(blank=True, null=True, verbose_name=b"Plant Review Date"),
                ),
                ("num_up", models.IntegerField(blank=True, null=True)),
                ("bev_item_name", models.CharField(blank=True, max_length=255)),
                (
                    "bev_imported_item_name",
                    models.CharField(blank=True, max_length=255),
                ),
                ("bev_panel_center", models.CharField(blank=True, max_length=255)),
                ("bev_panel_end", models.CharField(blank=True, max_length=255)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("bev_alt_code", models.CharField(blank=True, max_length=255)),
                ("num_colors_req", models.IntegerField(blank=True, null=True)),
                ("material", models.CharField(blank=True, max_length=255)),
                (
                    "assignment_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name=b"Date Printlocation Assigned",
                    ),
                ),
                (
                    "demand_plan_date",
                    models.DateField(blank=True, null=True, verbose_name=b"Demand Planning Date"),
                ),
                ("demand_plan_ok", models.BooleanField(default=False)),
                ("demand_plan_comments", models.CharField(blank=True, max_length=255)),
                ("jdf_no_dgc", models.BooleanField(default=False)),
                ("jdf_no_step", models.BooleanField(default=False)),
                (
                    "inkbook",
                    models.IntegerField(choices=[(1, b"GCH"), (2, b"PMS"), (3, b"OTHER")], default=2),
                ),
                (
                    "proof_reminder_email_sent",
                    models.DateTimeField(blank=True, null=True, verbose_name=b"Proof Reminder Sent"),
                ),
                ("bev_end_code", models.CharField(blank=True, max_length=255)),
                ("is_queued_for_thumbnailing", models.BooleanField(default=False)),
                ("time_last_thumbnailed", models.DateTimeField(blank=True, null=True)),
                (
                    "disclaimer_text",
                    models.TextField(blank=True, max_length=5000, null=True),
                ),
                (
                    "mkt_review_date",
                    models.DateField(blank=True, null=True, verbose_name=b"Marketing Review Date"),
                ),
                ("mkt_review_ok", models.BooleanField(default=False)),
                ("mkt_review_comments", models.CharField(blank=True, max_length=500)),
                ("mkt_review_needed", models.BooleanField(default=False)),
                (
                    "mkt_review_instructions",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "item_situation",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, b"Lost to Competitor"),
                            (2, b"New Job Entered"),
                            (3, b"Size Not Needed"),
                            (4, b"Not Enough Volume"),
                            (5, b"Speculative Art"),
                            (11, b"Combo Pack Item"),
                            (6, b"Wraps Only"),
                            (9, b"Stalled"),
                            (7, b"No Response"),
                            (10, b"Canceled: Other"),
                        ],
                        null=True,
                    ),
                ),
                ("uses_old_distortion", models.BooleanField(default=False)),
                ("uses_pre_distortion", models.BooleanField(default=False)),
                (
                    "bev_brand_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.beveragebrandcode",
                    ),
                ),
                (
                    "bev_center_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.beveragecentercode",
                    ),
                ),
                (
                    "bev_liquid_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.beverageliquidcontents",
                    ),
                ),
            ],
            options={
                "ordering": ["job", "num_in_job"],
                "verbose_name_plural": "Items",
                "permissions": (
                    ("can_proof_item", "Can Proof Item"),
                    ("can_approve_item", "Can Approve Item"),
                    ("can_forecast_item", "Can Forecast Item"),
                    ("can_file_out_item", "Can FileOut Item"),
                    ("can_edit_item_production", "Can Edit Item Production"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ItemCatalog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.CharField(max_length=75, unique=True)),
                (
                    "item_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("HC", "Hot Cup"),
                            ("CC", "Cold Cup"),
                            ("WP", "White Plastic"),
                            ("CP", "Clear Plastic"),
                            ("TP", "Translucent Plastic"),
                            ("KB", "Kraft"),
                            ("BG", "Bag"),
                            ("MS", "Misc"),
                            ("CT", "Carton"),
                            ("PN", "Panel"),
                            ("KC", "Kraft Corrugated"),
                            ("WC", "White Corrugated"),
                            ("LD", "Lid"),
                            ("FT", "Food Tray"),
                            ("OT", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "product_substrate",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Single Poly"),
                            (2, "Double Poly"),
                            (3, "Clay Coated"),
                            (4, "Clear Plastic"),
                            (5, "White Plastic"),
                            (12, "Translucent Plastic"),
                            (6, "Kraft Board"),
                            (7, "Clay Coated Bag"),
                            (9, "PLA"),
                            (10, "CRB"),
                            (11, "Post Consumer Fiber"),
                            (8, "N/A"),
                        ],
                        null=True,
                        verbose_name="Substrate",
                    ),
                ),
                (
                    "mfg_name",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="MFG Name",
                    ),
                ),
                ("template", models.CharField(blank=True, max_length=100)),
                ("photo", models.CharField(blank=True, max_length=100)),
                ("active", models.BooleanField(default=True)),
                (
                    "last_edit",
                    models.DateTimeField(auto_now=True, verbose_name="Last Edit Date"),
                ),
                ("bev_size_code", models.CharField(blank=True, max_length=5)),
                (
                    "acts_like",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="acts_like_item_set",
                        to="workflow.itemcatalog",
                    ),
                ),
                (
                    "productsubcategory",
                    models.ManyToManyField(
                        blank=True,
                        related_name="itemcatalog_set",
                        to="item_catalog.productsubcategory",
                        verbose_name="Prod. Category",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
                (
                    "product_board",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Double Poly"),
                            (2, "Single Poly"),
                            (3, "Single PLA"),
                            (4, "Double PLA"),
                            (5, "Clay Coated"),
                            (6, "Bare SBS"),
                            (7, "Kraft"),
                            (8, "CRB"),
                            (9, "Single PCF"),
                            (10, "Double PCF"),
                            (11, "Clear Plastic"),
                        ],
                        null=True,
                        verbose_name="Board",
                    ),
                ),
                ("comments", models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                "ordering": ["size"],
                "verbose_name_plural": "Item Catalog",
            },
        ),
        migrations.CreateModel(
            name="ItemColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color", models.CharField(max_length=255)),
                ("hexvalue", models.CharField(blank=True, max_length=12)),
                ("sequence", models.IntegerField(blank=True, null=True)),
                ("plate_code", models.CharField(blank=True, max_length=255)),
                (
                    "coverage_sqin",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True),
                ),
                (
                    "coverage_perc",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True),
                ),
                ("lpi", models.CharField(blank=True, max_length=5)),
                ("angle", models.CharField(blank=True, max_length=5)),
                ("num_plates", models.IntegerField(blank=True, null=True)),
                ("measured_lab_l", models.FloatField(blank=True, null=True)),
                ("measured_lab_a", models.FloatField(blank=True, null=True)),
                ("measured_lab_b", models.FloatField(blank=True, null=True)),
                ("delta_e", models.FloatField(blank=True, null=True)),
                ("delta_e_passes", models.BooleanField(blank=True, default=False)),
                ("proof_out_override_reason", models.TextField(blank=True, null=True)),
                (
                    "definition",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="color_mgt.colordefinition",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
            ],
            options={
                "ordering": ["id"],
                "verbose_name_plural": "Item Colors",
            },
        ),
        migrations.CreateModel(
            name="ItemTrackerCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Item Tracker Category",
                "verbose_name_plural": "Item Tracker Categories",
            },
        ),
        migrations.CreateModel(
            name="ItemTrackerType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemtrackercategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item Tracker Type",
                "verbose_name_plural": "Item Tracker Types",
            },
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(blank=True, max_length=50)),
                ("is_in_acs", models.BooleanField(default=False)),
                (
                    "bev_controller",
                    models.ManyToManyField(
                        blank=True,
                        related_name="beverage_controllers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Platemaker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "contacts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="platemaking_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ManyToManyField(blank=True, related_name="platemaking_sites", to="sites.site"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlateOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_entered",
                    models.DateField(auto_now_add=True, verbose_name="Date Entered"),
                ),
                (
                    "date_needed",
                    models.DateField(blank=True, null=True, verbose_name="Date Needed"),
                ),
                ("instructions", models.CharField(blank=True, max_length=250)),
                (
                    "stage1_complete_date",
                    models.DateField(blank=True, null=True, verbose_name="Stage1 Complete Date"),
                ),
                (
                    "stage2_complete_date",
                    models.DateField(blank=True, null=True, verbose_name="Stage2 Complete Date"),
                ),
                ("new_order", models.BooleanField(default=False)),
                (
                    "invoice_date",
                    models.DateField(blank=True, null=True, verbose_name="Order Invoice Date"),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "send_to_plant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="send_to_plant",
                        to="workflow.plant",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Plate Orders",
                "permissions": (("is_platemaker", "Platemaker"),),
            },
        ),
        migrations.CreateModel(
            name="PlatePackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platetype",
                    models.CharField(
                        choices=[
                            ("Conv", "Conventional Flexo"),
                            ("Digi", "Digital Flexo"),
                            ("DigiLux", "Digital Lux"),
                            ("DigiLuxHD", "Digital Lux HD"),
                            ("DigiLuxMcD", "Digital Lux McD"),
                            ("Rub", "Rubber Flexo"),
                            ("Lth", "Litho"),
                            ("Grv", "Gravure"),
                            ("Off", "Offset Flexo"),
                            ("Oth", "Other"),
                            ("NA", "N/A"),
                            ("Corrugate", "Corrugated"),
                            ("InTheRound", "InTheRound"),
                            ("NX", "NX"),
                        ],
                        max_length=50,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "platemaker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.platemaker",
                    ),
                ),
                (
                    "workflow",
                    models.ManyToManyField(blank=True, related_name="platepackage_sites", to="sites.site"),
                ),
            ],
            options={
                "ordering": ["platemaker"],
            },
        ),
        migrations.CreateModel(
            name="Press",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("short_name", models.CharField(max_length=20)),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
            ],
            options={
                "verbose_name_plural": "Presses",
            },
        ),
        migrations.CreateModel(
            name="PrintLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "plant",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.plant"),
                ),
                (
                    "press",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.press"),
                ),
            ],
            options={
                "ordering": ["plant"],
            },
        ),
        migrations.CreateModel(
            name="SalesServiceRep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="SpecialMfgConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("is_deleted", models.BooleanField(default=False)),
                ("brand_name", models.CharField(blank=True, max_length=255)),
                ("customer_name", models.CharField(blank=True, max_length=255)),
                ("customer_email", models.CharField(blank=True, max_length=255)),
                ("customer_phone", models.CharField(blank=True, max_length=25)),
                ("vrml_password", models.CharField(blank=True, max_length=255)),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name="Due Date"),
                ),
                (
                    "real_due_date",
                    models.DateField(blank=True, null=True, verbose_name="Real Due Date"),
                ),
                (
                    "creation_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date Entered"),
                ),
                ("e_tools_id", models.CharField(blank=True, max_length=12)),
                (
                    "bill_to_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BTC", "Bill To Customer"),
                            ("AMO", "Absorbed MFG Operations"),
                            ("APR", "Absorbed To Project (2007 RAT)"),
                            ("ASN", "Absorbed Sales New"),
                            ("ASP", "Absorbed Sales Policy"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "business_type",
                    models.CharField(
                        blank=True,
                        choices=[("NEW", "New"), ("EXT", "Existing")],
                        max_length=50,
                    ),
                ),
                (
                    "prepress_supplier",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OPT", "Optihue"),
                            ("PHT", "Phototype"),
                            ("SHK", "Schawk"),
                            ("SGS", "Southern Graphics"),
                        ],
                        max_length=50,
                        verbose_name="Prepress Sup.",
                    ),
                ),
                ("archive_disc", models.CharField(blank=True, max_length=12)),
                (
                    "last_modified",
                    models.DateTimeField(auto_now=True, verbose_name="Date Last Modified"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Active", "Active"),
                            ("Hold", "Hold"),
                            ("Complete", "Complete"),
                            ("CompleteBilled", "Complete & Billed"),
                            ("Cancelled", "Cancelled"),
                            ("ClosedATP", "Closed - Absorbed to Plant"),
                            ("ClosedATS", "Closed - Absorbed to Sales"),
                            ("ClosedBTC", "Closed - Bill to Customer"),
                        ],
                        default="Pending",
                        max_length=100,
                    ),
                ),
                ("comments", models.TextField(blank=True, max_length=5000)),
                ("instructions", models.TextField(blank=True, max_length=5000)),
                ("po_number", models.CharField(blank=True, max_length=100)),
                (
                    "customer_po_number",
                    models.CharField(blank=True, max_length=100, verbose_name="Customer PO#"),
                ),
                ("temp_invoiced", models.CharField(blank=True, max_length=50)),
                (
                    "art_rec_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Digital Art via E-mail"),
                            (2, "Original Art"),
                            (3, "Art to be created by Clemson"),
                            (4, "Recreate from Print Sample"),
                            (5, "ISDN or FTP"),
                            (6, "Digital art on Disk"),
                            (9, "Other"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "ship_to_state",
                    localflavor.us.models.USStateField(blank=True, max_length=2, null=True),
                ),
                ("needs_etools_update", models.BooleanField(default=False)),
                ("anticipated_plant", models.CharField(blank=True, max_length=255)),
                ("keep_upc", models.BooleanField(default=False)),
                ("plantpress_change", models.BooleanField(default=False)),
                (
                    "olmsted_po_number",
                    models.CharField(blank=True, max_length=100, verbose_name="PO#"),
                ),
                (
                    "use_new_bev_nomenclature",
                    models.BooleanField(default=True, verbose_name="New Nomenclature"),
                ),
                (
                    "todo_list_mode",
                    models.IntegerField(
                        choices=[(0, "Default"), (1, "Stickied"), (2, "Hidden")],
                        default=0,
                    ),
                ),
                ("user_keywords", models.CharField(blank=True, max_length=500)),
                ("generated_keywords", models.TextField(blank=True, max_length=20000)),
                (
                    "artist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "csr",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="csr_of_job_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "duplicated_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="duplicated_from_job",
                        to="workflow.job",
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modified_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "printgroup",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qad_data.qad_printgroups",
                    ),
                ),
                (
                    "sales_service_rep",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.salesservicerep",
                        verbose_name="Sales Rep.",
                    ),
                ),
                (
                    "salesperson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="salesperson",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "temp_platepackage",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.platepackage",
                    ),
                ),
                (
                    "temp_printlocation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.printlocation",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BillableSales", "Billable - Sales"),
                            ("BillablePlants", "Billable - Plants"),
                            ("BillableMarketing", "Billable - Marketing"),
                            ("CostAvoidance", "Cost Avoidance"),
                            ("Transition", "Transition"),
                            ("CreativeSales", "Creative - Sales"),
                            ("CreativeMarketing", "Creative - Marketing"),
                        ],
                        max_length=100,
                    ),
                ),
                ("customer_identifier", models.CharField(blank=True, max_length=255)),
                ("graphic_supplier", models.CharField(blank=True, max_length=255)),
                (
                    "pcss",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pcss_of_job_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "graphic_specialist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="graphic_specialist_of_job_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "carton_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Imposition", "Imposition"),
                            ("Prepress", "Prepress"),
                        ],
                        max_length=100,
                    ),
                ),
                ("duplication_type", models.CharField(blank=True, max_length=255)),
                (
                    "purchase_request_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="EVG Purchase Request Number",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Jobs",
                "permissions": (("duplicate_job", "Can duplicate or press change jobs"),),
            },
        ),
        migrations.CreateModel(
            name="ItemSpec",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stepping_notes", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "horizontal",
                    models.FloatField(blank=True, null=True, verbose_name="Art width"),
                ),
                (
                    "vertical",
                    models.FloatField(blank=True, null=True, verbose_name="Art height"),
                ),
                (
                    "case_dim_w",
                    models.CharField(blank=True, max_length=25, verbose_name="Case width"),
                ),
                (
                    "case_dim_h",
                    models.CharField(blank=True, max_length=25, verbose_name="Case height"),
                ),
                (
                    "case_dim_d",
                    models.CharField(blank=True, max_length=25, verbose_name="Case depth"),
                ),
                (
                    "total_print_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Total Print Area",
                    ),
                ),
                (
                    "case_wt",
                    models.CharField(blank=True, max_length=100, verbose_name="Case weight"),
                ),
                ("case_pack", models.IntegerField(blank=True, null=True)),
                ("min_case", models.IntegerField(blank=True, null=True)),
                (
                    "printlocation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.printlocation",
                    ),
                ),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemcatalog",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Item Specifications",
                "unique_together": {("size", "printlocation")},
            },
        ),
        migrations.AddField(
            model_name="item",
            name="ink_usage",
            field=models.ManyToManyField(blank=True, related_name="ink_set", to="workflow.itemcolor"),
        ),
        migrations.AddField(
            model_name="item",
            name="job",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.job"),
        ),
        migrations.AddField(
            model_name="item",
            name="plant_reviewer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plant_reviewer",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="platepackage",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.platepackage",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="printlocation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.printlocation",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="size",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.itemcatalog"),
        ),
        migrations.AddField(
            model_name="item",
            name="special_mfg",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.specialmfgconfiguration",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="steps_with",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="steps_with_item",
                to="workflow.item",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="workflow",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
        ),
        migrations.AlterField(
            model_name="item",
            name="assignment_date",
            field=models.DateField(blank=True, null=True, verbose_name="Date Printlocation Assigned"),
        ),
        migrations.AlterField(
            model_name="item",
            name="creation_date",
            field=models.DateTimeField(auto_now_add=True, verbose_name="Date Entered"),
        ),
        migrations.AlterField(
            model_name="item",
            name="demand_plan_date",
            field=models.DateField(blank=True, null=True, verbose_name="Demand Planning Date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="electronic_proof_date",
            field=models.DateField(blank=True, null=True, verbose_name="electronic proof date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="file_delivery_date",
            field=models.DateField(blank=True, null=True, verbose_name="file delivery date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="fsb_nine_digit_date",
            field=models.DateField(blank=True, null=True, verbose_name="fsb nine digit creation date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="inkbook",
            field=models.IntegerField(choices=[(1, "GCH"), (2, "PMS"), (3, "OTHER")], default=2),
        ),
        migrations.AlterField(
            model_name="item",
            name="item_situation",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (1, "Lost to Competitor"),
                    (2, "New Job Entered"),
                    (3, "Size Not Needed"),
                    (4, "Not Enough Volume"),
                    (5, "Speculative Art"),
                    (11, "Combo Pack Item"),
                    (6, "Wraps Only"),
                    (9, "Stalled"),
                    (7, "No Response"),
                    (10, "Canceled: Other"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="item",
            name="item_status",
            field=models.CharField(default="Pending", max_length=100),
        ),
        migrations.AlterField(
            model_name="item",
            name="last_modified",
            field=models.DateTimeField(auto_now=True, verbose_name="Date Last Modified"),
        ),
        migrations.AlterField(
            model_name="item",
            name="mkt_review_date",
            field=models.DateField(blank=True, null=True, verbose_name="Marketing Review Date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="plant_review_date",
            field=models.DateField(blank=True, null=True, verbose_name="Plant Review Date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="preflight_date",
            field=models.DateField(blank=True, null=True, verbose_name="preflight date"),
        ),
        migrations.AlterField(
            model_name="item",
            name="proof_reminder_email_sent",
            field=models.DateTimeField(blank=True, null=True, verbose_name="Proof Reminder Sent"),
        ),
        migrations.AlterField(
            model_name="item",
            name="quality",
            field=models.CharField(blank=True, choices=[("A", "A"), ("B", "B"), ("C", "C")], max_length=1),
        ),
        migrations.AddField(
            model_name="item",
            name="distortion",
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="is_carton",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="item",
            name="location",
            field=models.CharField(blank=True, default="Outside", max_length=255),
        ),
        migrations.AddField(
            model_name="item",
            name="one_up_die",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="item",
            name="print_repeat",
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="process",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="item",
            name="profile",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="item",
            name="upc",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="item",
            name="graphic_req_number",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="coating_pattern",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="grn",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="product_group",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="step_die",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="customer_code",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="graphic_po",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="sap_ship_to",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="sap_sold_to",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="gdd_origin",
            field=models.CharField(
                blank=True,
                choices=[
                    ("", "----"),
                    ("CLEMSON", "Clemson"),
                    ("CAROL_STREAM", "Carol Stream"),
                    ("CONCORD", "Concord"),
                ],
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="plate_thickness",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name="Substrate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Substrates",
            },
        ),
        migrations.AddField(
            model_name="item",
            name="substrate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.substrate",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="gcr",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="CartonWorkflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Carton Workflows",
            },
        ),
        migrations.CreateModel(
            name="InkSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Ink Sets",
            },
        ),
        migrations.CreateModel(
            name="LineScreen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Line Screens",
            },
        ),
        migrations.CreateModel(
            name="PrintCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Print Conditions",
            },
        ),
        migrations.CreateModel(
            name="Trap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Traps",
            },
        ),
        migrations.CreateModel(
            name="CartonProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("active", models.BooleanField(default=True)),
                (
                    "carton_workflow",
                    models.ManyToManyField(related_name="carton_workflows", to="workflow.cartonworkflow"),
                ),
                (
                    "ink_set",
                    models.ManyToManyField(related_name="ink_sets", to="workflow.inkset"),
                ),
                (
                    "line_screen",
                    models.ManyToManyField(related_name="line_screens", to="workflow.linescreen"),
                ),
                (
                    "print_condition",
                    models.ManyToManyField(related_name="print_conditions", to="workflow.printcondition"),
                ),
                (
                    "print_location",
                    models.ManyToManyField(related_name="print_locations", to="workflow.printlocation"),
                ),
                (
                    "substrate",
                    models.ManyToManyField(related_name="substrates", to="workflow.substrate"),
                ),
            ],
            options={
                "ordering": ["name"],
                "verbose_name_plural": "Carton Profiles",
            },
        ),
        migrations.AddField(
            model_name="item",
            name="carton_profile",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.cartonprofile",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="carton_workflow",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.cartonworkflow",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="ink_set",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.inkset",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="line_screen",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.linescreen",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="print_condition",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.printcondition",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="trap",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.trap",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="proof_type_notes",
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name="item",
            name="proof_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("", "---------"),
                    ("COLOR_AND_COPY", "Color and Copy"),
                    ("COPY_ONLY", "Copy Only"),
                    ("DUPLICATE_PROOF", "Duplicate Proof"),
                    ("EDITS_ORIGINAL", "Edits to Original"),
                    ("EDITS_ORIGINAL_SWATCHES", "Edits to Original w Swatches"),
                ],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="kd_press",
            field=models.CharField(
                blank=True,
                choices=[
                    ("VERNON_5114", "Mt Vernon 5114 42”"),
                    ("VERNON_5190", "Mt Vernon 5190 50”"),
                    ("LINCOLN", "Lincoln"),
                    ("LINCOLN_50", "Lincoln 50”"),
                    ("LINCOLN_37_5", "Lincoln 37.5”"),
                    ("MARION_5194_50", "Marion 5194 50”"),
                    ("SANGER_38", "Sanger 38”"),
                    ("SANGER_40", "Sanger 40”"),
                    ("SANGER_50", "Sanger 50”"),
                    ("SANGER_66", "Sanger 66”"),
                    ("WESTROCK_3121", "WestRock 3121 38”"),
                    ("WESTROCK_3122", "WestRock 3122 35.4”"),
                    ("WESTROCK_3131", "WestRock 3131/32 50”"),
                    ("WESTROCK_3133", "WestRock 3133 50”"),
                    ("WESTROCK_4521", "WestRock 4521/22 66”"),
                ],
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="ecg",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="item",
            name="render",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="BevItemColorCodes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num_colors", models.IntegerField()),
                ("code", models.CharField(max_length=20)),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemcatalog",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Charge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField()),
                ("comments", models.TextField(blank=True, max_length=5000)),
                (
                    "creation_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date Billed"),
                ),
                (
                    "invoice_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Invoiced"),
                ),
                ("invoice_number", models.CharField(blank=True, max_length=25)),
                ("bill_to", models.CharField(blank=True, max_length=255)),
                ("rush_days", models.IntegerField(blank=True, null=True)),
                (
                    "artist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "bev_invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bev_billing.bevinvoice",
                    ),
                ),
                (
                    "description",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.chargetype",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ColorWarning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pantone_color", models.CharField(max_length=64)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("qpo_number", models.CharField(max_length=32)),
                ("active", models.BooleanField(default=True)),
                (
                    "definition",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="color_mgt.colordefinition",
                    ),
                ),
                (
                    "dismissal_notes",
                    models.TextField(blank=True, max_length=500, null=True),
                ),
                ("dismissed", models.BooleanField(blank=True, default=False)),
                ("notes", models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                "ordering": ["definition"],
                "verbose_name_plural": "Color Warning",
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("printgroup", models.CharField(blank=True, max_length=255)),
                ("primary_salesperson", models.CharField(blank=True, max_length=255)),
                ("comments", models.TextField(blank=True, max_length=5000)),
                (
                    "workflow",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="sites.site"),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="item",
            name="id",
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
        ),
        migrations.CreateModel(
            name="ItemCatalogPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stock", models.CharField(blank=True, max_length=20)),
                ("photo", models.CharField(blank=True, max_length=100)),
                ("active", models.BooleanField(default=True)),
                (
                    "last_edit",
                    models.DateTimeField(auto_now=True, verbose_name="Last Edit Date"),
                ),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemcatalog",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Item Catalog Photos",
            },
        ),
        migrations.CreateModel(
            name="ItemReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "review_catagory",
                    models.CharField(
                        choices=[
                            ("plant", "Plant Review"),
                            ("demand", "Demand Review"),
                            ("market", "Marketing Review"),
                        ],
                        max_length=20,
                    ),
                ),
                ("entry_comments", models.CharField(blank=True, max_length=500)),
                ("comments", models.CharField(blank=True, max_length=500)),
                ("resub_comments", models.CharField(blank=True, max_length=500)),
                (
                    "review_initiated_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date Review Initiated"),
                ),
                (
                    "review_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Reviewed"),
                ),
                ("review_ok", models.BooleanField(default=False)),
                ("resubmitted", models.BooleanField(default=False)),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviewer_test",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ItemTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "addition_comments",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "addition_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Added"),
                ),
                (
                    "removal_comments",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "removal_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Removed"),
                ),
                (
                    "edited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracker_edited_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
                (
                    "removed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracker_removed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemtrackertype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item Tracker",
                "verbose_name_plural": "Item Trackers",
            },
        ),
        migrations.CreateModel(
            name="JobAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("company", models.CharField(blank=True, max_length=255)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("address1", models.CharField(max_length=255)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("zip", models.CharField(blank=True, max_length=50)),
                ("country", models.CharField(max_length=255)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("ext", models.CharField(blank=True, max_length=15, null=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("cell_phone", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "job",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.job"),
                ),
            ],
            options={
                "verbose_name_plural": "Job Addresses",
            },
        ),
        migrations.CreateModel(
            name="JobComplexity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("RebuildNoArt", "Rebuild - No Art"),
                            ("RebuildSomeArt", "Rebuild - Some Art"),
                            ("NewGPIStraightTemp", "New - GPI Straight Temp"),
                            ("NewGPICurvedTemp", "New - GPI Curved Temp"),
                            ("NewCompetStraightTemp", "New - Competitor Straight Temp"),
                            ("NewCompetCurvedTemp", "New - Competitor Curved Temp"),
                            ("RevGPIArt", "Revision - GPI Artwork"),
                            ("Creative", "Creative"),
                            ("SpecSheet", "Spec Sheet"),
                            ("Other", "Other"),
                            ("CorrugatedCustom", "Corrugated - Custom"),
                            ("CorrugatedAuto", "Corrugated - Auto"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "complexity",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B"), ("C", "C")],
                        max_length=100,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.job"),
                ),
            ],
            options={
                "verbose_name_plural": "Job Complexity",
            },
        ),
        migrations.CreateModel(
            name="PlateOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity_needed", models.IntegerField()),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemcolor",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.plateorder",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProofTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(verbose_name="Date Printed")),
                ("copies", models.IntegerField(default=1)),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
                ("xml_filename", models.CharField(blank=True, max_length=255)),
                ("proofer", models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Revision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date Entered"),
                ),
                ("due_date", models.DateField(verbose_name="Due Date")),
                (
                    "complete_date",
                    models.DateField(blank=True, null=True, verbose_name="Complete Date"),
                ),
                ("comments", models.TextField()),
                (
                    "entered_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rev_entered_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
            ],
            options={
                "get_latest_by": "creation_date",
            },
        ),
        migrations.CreateModel(
            name="StepSpec",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eng_num",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Engineering drawing number",
                    ),
                ),
                (
                    "num_colors",
                    models.IntegerField(blank=True, null=True, verbose_name="Number of colors"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "Created"),
                            ("checked", "Checked"),
                            ("verified", "Verified"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "template_horizontal",
                    models.FloatField(blank=True, null=True, verbose_name="Template width"),
                ),
                (
                    "template_vertical",
                    models.FloatField(blank=True, null=True, verbose_name="Template height"),
                ),
                ("step_around", models.IntegerField(blank=True, null=True)),
                ("step_across", models.IntegerField(blank=True, null=True)),
                ("print_repeat", models.FloatField(blank=True, null=True)),
                (
                    "num_blanks",
                    models.IntegerField(blank=True, null=True, verbose_name="Number of blanks"),
                ),
                ("comments", models.CharField(blank=True, max_length=500)),
                ("active", models.BooleanField(default=False)),
                (
                    "creation_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date created"),
                ),
                (
                    "last_edit",
                    models.DateTimeField(auto_now=True, verbose_name="Last edit date"),
                ),
                (
                    "itemspec",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemspec",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stepspec_edits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "special_mfg",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.specialmfgconfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Step and repeat specifications",
                "unique_together": {("itemspec", "special_mfg")},
            },
        ),
        migrations.CreateModel(
            name="TiffCrop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num_up", models.IntegerField()),
                ("x_size", models.FloatField()),
                ("y_size", models.FloatField()),
                ("x_offset", models.FloatField()),
                ("y_offset", models.FloatField()),
                (
                    "plant",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.plant"),
                ),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.itemcatalog",
                    ),
                ),
                (
                    "special_mfg",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.specialmfgconfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tiff Crop Dimension",
                "verbose_name_plural": "Tiff Crop Dimensions",
            },
        ),
        migrations.CreateModel(
            name="TrackedArt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "art_catagory",
                    models.CharField(
                        choices=[
                            ("ecotainer", "Ecotainer Logo"),
                            ("hold_go", "Hold & Go Logo"),
                            ("bpi", "BPI Logo"),
                            ("din_certo", "Din Certo Logo"),
                            ("sfi", "SFI Label"),
                            ("fsc", "FSC Label"),
                            ("pefc", "PEFC Label"),
                            ("misc_enviro", "Misc. Enviromental Messaging"),
                        ],
                        max_length=30,
                    ),
                ),
                ("addition_comments", models.CharField(blank=True, max_length=500)),
                (
                    "addition_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Added"),
                ),
                ("removal_comments", models.CharField(blank=True, max_length=500)),
                (
                    "removal_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Removed"),
                ),
                (
                    "edited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="edited_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="workflow.item"),
                ),
                (
                    "removed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="removed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
