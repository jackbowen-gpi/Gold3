# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-02 17:02
from __future__ import unicode_literals

import django.db.models.deletion
import localflavor.us.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("item_catalog", "0001_initial"),
        ("color_mgt", "0001_initial"),
        ("sites", "0002_alter_domain_unique"),
        ("qad_data", "0001_initial"),
        ("bev_billing", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BeverageBrandCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BeverageCenterCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BeverageLiquidContents",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BevItemColorCodes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num_colors", models.IntegerField()),
                ("code", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Charge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField()),
                ("comments", models.TextField(blank=True, max_length=5000)),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name=b"Date Billed"
                    ),
                ),
                (
                    "invoice_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Date Invoiced"
                    ),
                ),
                ("invoice_number", models.CharField(blank=True, max_length=25)),
                ("bill_to", models.CharField(blank=True, max_length=255)),
                ("rush_days", models.IntegerField(blank=True, null=True)),
                (
                    "artist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "bev_invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bev_billing.BevInvoice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChargeCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "Charge Categories",
            },
        ),
        migrations.CreateModel(
            name="ChargeType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("base_amount", models.FloatField()),
                (
                    "rush_type",
                    models.CharField(
                        choices=[
                            (b"NONE", b"None"),
                            (b"FSBMULTH", b"Foodservice High Multiplier"),
                            (b"FSBMULTL", b"Foodservice Low Multiplier"),
                        ],
                        max_length=8,
                    ),
                ),
                ("adjust_for_colors", models.BooleanField(default=False)),
                ("adjust_for_quality", models.BooleanField(default=False)),
                ("extra_amount", models.FloatField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.ChargeCategory",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Charge Types",
            },
        ),
        migrations.CreateModel(
            name="ColorWarning",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pantone_color", models.CharField(max_length=64)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("qpo_number", models.CharField(max_length=32)),
                ("active", models.BooleanField(default=True)),
                (
                    "definition",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="color_mgt.ColorDefinition",
                    ),
                ),
            ],
            options={
                "ordering": ["definition"],
                "verbose_name_plural": "Color Warning",
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("printgroup", models.CharField(blank=True, max_length=255)),
                ("primary_salesperson", models.CharField(blank=True, max_length=255)),
                ("comments", models.TextField(blank=True, max_length=5000)),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "num_in_job",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name=b"Date Entered"
                    ),
                ),
                ("item_type", models.CharField(blank=True, max_length=100)),
                ("upc_number", models.CharField(blank=True, max_length=255)),
                ("upc_ink_color", models.CharField(blank=True, max_length=20)),
                ("po_number", models.CharField(blank=True, max_length=20)),
                ("path_to_file", models.CharField(blank=True, max_length=255)),
                ("item_status", models.CharField(default=b"Pending", max_length=100)),
                (
                    "preflight_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"preflight date"
                    ),
                ),
                ("preflight_ok", models.BooleanField(default=False)),
                (
                    "electronic_proof_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"electronic proof date"
                    ),
                ),
                (
                    "file_delivery_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"file delivery date"
                    ),
                ),
                ("case_pack", models.IntegerField(blank=True, null=True)),
                ("press_change", models.BooleanField(default=False)),
                ("annual_use", models.IntegerField(blank=True, null=True)),
                ("wrappable_proof", models.BooleanField(default=False)),
                ("mock_up", models.BooleanField(default=False)),
                ("label_color", models.CharField(blank=True, max_length=255)),
                ("noise_filter", models.BooleanField(default=True)),
                (
                    "quality",
                    models.CharField(
                        blank=True,
                        choices=[(b"A", b"A"), (b"B", b"B"), (b"C", b"C")],
                        max_length=1,
                    ),
                ),
                (
                    "fsb_nine_digit",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "fsb_nine_digit_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name=b"fsb nine digit creation date",
                    ),
                ),
                ("wrin_number", models.CharField(blank=True, max_length=255)),
                ("sap_number", models.CharField(blank=True, max_length=25)),
                ("bom_number", models.CharField(blank=True, max_length=255)),
                ("floor_stock", models.BooleanField(default=False)),
                ("replaces", models.CharField(blank=True, max_length=255, null=True)),
                ("overdue_exempt", models.BooleanField(default=False)),
                ("overdue_exempt_reason", models.CharField(blank=True, max_length=500)),
                ("file_out_exempt", models.BooleanField(default=False)),
                (
                    "file_out_exempt_reason",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "length",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "width",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                ("ect", models.IntegerField(blank=True, null=True)),
                (
                    "last_modified",
                    models.DateTimeField(
                        auto_now=True, verbose_name=b"Date Last Modified"
                    ),
                ),
                ("plant_comments", models.CharField(blank=True, max_length=500)),
                (
                    "plant_review_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Plant Review Date"
                    ),
                ),
                ("num_up", models.IntegerField(blank=True, null=True)),
                ("bev_item_name", models.CharField(blank=True, max_length=255)),
                (
                    "bev_imported_item_name",
                    models.CharField(blank=True, max_length=255),
                ),
                ("bev_panel_center", models.CharField(blank=True, max_length=255)),
                ("bev_panel_end", models.CharField(blank=True, max_length=255)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("bev_alt_code", models.CharField(blank=True, max_length=255)),
                ("num_colors_req", models.IntegerField(blank=True, null=True)),
                ("material", models.CharField(blank=True, max_length=255)),
                (
                    "assignment_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name=b"Date Printlocation Assigned",
                    ),
                ),
                (
                    "demand_plan_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Demand Planning Date"
                    ),
                ),
                ("demand_plan_ok", models.BooleanField(default=False)),
                ("demand_plan_comments", models.CharField(blank=True, max_length=255)),
                ("jdf_no_dgc", models.BooleanField(default=False)),
                ("jdf_no_step", models.BooleanField(default=False)),
                (
                    "inkbook",
                    models.IntegerField(
                        choices=[(1, b"GCH"), (2, b"PMS"), (3, b"OTHER")], default=2
                    ),
                ),
                (
                    "proof_reminder_email_sent",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name=b"Proof Reminder Sent"
                    ),
                ),
                ("bev_end_code", models.CharField(blank=True, max_length=255)),
                ("is_queued_for_thumbnailing", models.BooleanField(default=False)),
                ("time_last_thumbnailed", models.DateTimeField(blank=True, null=True)),
                (
                    "disclaimer_text",
                    models.TextField(blank=True, max_length=5000, null=True),
                ),
                (
                    "mkt_review_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Marketing Review Date"
                    ),
                ),
                ("mkt_review_ok", models.BooleanField(default=False)),
                ("mkt_review_comments", models.CharField(blank=True, max_length=500)),
                ("mkt_review_needed", models.BooleanField(default=False)),
                (
                    "mkt_review_instructions",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "item_situation",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, b"Lost to Competitor"),
                            (2, b"New Job Entered"),
                            (3, b"Size Not Needed"),
                            (4, b"Not Enough Volume"),
                            (5, b"Speculative Art"),
                            (11, b"Combo Pack Item"),
                            (6, b"Wraps Only"),
                            (9, b"Stalled"),
                            (7, b"No Response"),
                            (10, b"Canceled: Other"),
                        ],
                        null=True,
                    ),
                ),
                ("uses_old_distortion", models.BooleanField(default=False)),
                ("uses_pre_distortion", models.BooleanField(default=False)),
                (
                    "bev_brand_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.BeverageBrandCode",
                    ),
                ),
                (
                    "bev_center_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.BeverageCenterCode",
                    ),
                ),
                (
                    "bev_liquid_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.BeverageLiquidContents",
                    ),
                ),
            ],
            options={
                "ordering": ["job", "num_in_job"],
                "verbose_name_plural": "Items",
                "permissions": (
                    ("can_proof_item", "Can Proof Item"),
                    ("can_approve_item", "Can Approve Item"),
                    ("can_forecast_item", "Can Forecast Item"),
                    ("can_file_out_item", "Can FileOut Item"),
                    ("can_edit_item_production", "Can Edit Item Production"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ItemCatalog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.CharField(max_length=75, unique=True)),
                (
                    "item_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"HC", b"Hot Cup"),
                            (b"CC", b"Cold Cup"),
                            (b"WP", b"White Plastic"),
                            (b"CP", b"Clear Plastic"),
                            (b"KB", b"Kraft"),
                            (b"BG", b"Bag"),
                            (b"MS", b"Misc"),
                            (b"CT", b"Carton"),
                            (b"PN", b"Panel"),
                            (b"KC", b"Kraft Corrugated"),
                            (b"WC", b"White Corrugated"),
                            (b"LD", b"Lid"),
                            (b"FT", b"Food Tray"),
                            (b"OT", b"Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "product_substrate",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, b"Single Poly"),
                            (2, b"Double Poly"),
                            (3, b"Clay Coated"),
                            (4, b"Clear Plastic"),
                            (5, b"White Plastic"),
                            (6, b"Kraft Board"),
                            (7, b"Clay Coated Bag"),
                            (8, b"N/A"),
                        ],
                        null=True,
                        verbose_name=b"Substrate",
                    ),
                ),
                (
                    "mfg_name",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name=b"MFG Name",
                    ),
                ),
                ("template", models.CharField(blank=True, max_length=100)),
                ("photo", models.CharField(blank=True, max_length=100)),
                ("active", models.BooleanField(default=True)),
                (
                    "last_edit",
                    models.DateTimeField(auto_now=True, verbose_name=b"Last Edit Date"),
                ),
                ("bev_size_code", models.CharField(blank=True, max_length=5)),
                (
                    "acts_like",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="acts_like_item_set",
                        to="workflow.ItemCatalog",
                    ),
                ),
                (
                    "productsubcategory",
                    models.ManyToManyField(
                        blank=True,
                        related_name="itemcatalog_set",
                        to="item_catalog.ProductSubCategory",
                        verbose_name=b"Prod. Category",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
                    ),
                ),
            ],
            options={
                "ordering": ["size"],
                "verbose_name_plural": "Item Catalog",
            },
        ),
        migrations.CreateModel(
            name="ItemCatalogPhoto",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stock", models.CharField(blank=True, max_length=20)),
                ("photo", models.CharField(blank=True, max_length=100)),
                ("active", models.BooleanField(default=True)),
                (
                    "last_edit",
                    models.DateTimeField(auto_now=True, verbose_name=b"Last Edit Date"),
                ),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.ItemCatalog",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Item Catalog Photos",
            },
        ),
        migrations.CreateModel(
            name="ItemColor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color", models.CharField(max_length=255)),
                ("hexvalue", models.CharField(blank=True, max_length=12)),
                ("sequence", models.IntegerField(blank=True, null=True)),
                ("plate_code", models.CharField(blank=True, max_length=255)),
                (
                    "coverage_sqin",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "coverage_perc",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                ("lpi", models.CharField(blank=True, max_length=5)),
                ("angle", models.CharField(blank=True, max_length=5)),
                ("num_plates", models.IntegerField(blank=True, null=True)),
                ("measured_lab_l", models.FloatField(blank=True, null=True)),
                ("measured_lab_a", models.FloatField(blank=True, null=True)),
                ("measured_lab_b", models.FloatField(blank=True, null=True)),
                ("delta_e", models.FloatField(blank=True, null=True)),
                ("delta_e_passes", models.BooleanField(default=False)),
                ("proof_out_override_reason", models.TextField(blank=True, null=True)),
                (
                    "definition",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="color_mgt.ColorDefinition",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "verbose_name_plural": "Item Colors",
            },
        ),
        migrations.CreateModel(
            name="ItemReview",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "review_catagory",
                    models.CharField(
                        choices=[
                            (b"plant", b"Plant Review"),
                            (b"demand", b"Demand Review"),
                            (b"market", b"Marketing Review"),
                        ],
                        max_length=20,
                    ),
                ),
                ("entry_comments", models.CharField(blank=True, max_length=500)),
                ("comments", models.CharField(blank=True, max_length=500)),
                ("resub_comments", models.CharField(blank=True, max_length=500)),
                (
                    "review_initiated_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name=b"Date Review Initiated"
                    ),
                ),
                (
                    "review_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Date Reviewed"
                    ),
                ),
                ("review_ok", models.BooleanField(default=False)),
                ("resubmitted", models.BooleanField(default=False)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviewer_test",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ItemSpec",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stepping_notes", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "horizontal",
                    models.FloatField(blank=True, null=True, verbose_name=b"Art width"),
                ),
                (
                    "vertical",
                    models.FloatField(
                        blank=True, null=True, verbose_name=b"Art height"
                    ),
                ),
                (
                    "case_dim_w",
                    models.CharField(
                        blank=True, max_length=25, verbose_name=b"Case width"
                    ),
                ),
                (
                    "case_dim_h",
                    models.CharField(
                        blank=True, max_length=25, verbose_name=b"Case height"
                    ),
                ),
                (
                    "case_dim_d",
                    models.CharField(
                        blank=True, max_length=25, verbose_name=b"Case depth"
                    ),
                ),
                (
                    "total_print_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name=b"Total Print Area",
                    ),
                ),
                (
                    "case_wt",
                    models.CharField(
                        blank=True, max_length=100, verbose_name=b"Case weight"
                    ),
                ),
                ("case_pack", models.IntegerField(blank=True, null=True)),
                ("min_case", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Item Specifications",
            },
        ),
        migrations.CreateModel(
            name="ItemTracker",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "addition_comments",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "addition_date",
                    models.DateField(blank=True, null=True, verbose_name=b"Date Added"),
                ),
                (
                    "removal_comments",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "removal_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Date Removed"
                    ),
                ),
                (
                    "edited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracker_edited_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
                    ),
                ),
                (
                    "removed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracker_removed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Item Tracker",
                "verbose_name_plural": "Item Trackers",
            },
        ),
        migrations.CreateModel(
            name="ItemTrackerCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Item Tracker Category",
                "verbose_name_plural": "Item Tracker Categories",
            },
        ),
        migrations.CreateModel(
            name="ItemTrackerType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.ItemTrackerCategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item Tracker Type",
                "verbose_name_plural": "Item Tracker Types",
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("is_deleted", models.BooleanField(default=False)),
                ("brand_name", models.CharField(blank=True, max_length=255)),
                ("customer_name", models.CharField(blank=True, max_length=255)),
                ("customer_email", models.CharField(blank=True, max_length=255)),
                ("customer_phone", models.CharField(blank=True, max_length=25)),
                ("vrml_password", models.CharField(blank=True, max_length=255)),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name=b"Due Date"),
                ),
                (
                    "real_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Real Due Date"
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name=b"Date Entered"
                    ),
                ),
                ("e_tools_id", models.CharField(blank=True, max_length=12)),
                (
                    "bill_to_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"BTC", b"Bill To Customer"),
                            (b"AMO", b"Absorbed MFG Operations"),
                            (b"APR", b"Absorbed To Project (2007 RAT)"),
                            (b"ASN", b"Absorbed Sales New"),
                            (b"ASP", b"Absorbed Sales Policy"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "business_type",
                    models.CharField(
                        blank=True,
                        choices=[(b"NEW", b"New"), (b"EXT", b"Existing")],
                        max_length=50,
                    ),
                ),
                (
                    "prepress_supplier",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"OPT", b"Optihue"),
                            (b"PHT", b"Phototype"),
                            (b"SHK", b"Schawk"),
                            (b"SGS", b"Southern Graphics"),
                        ],
                        max_length=50,
                        verbose_name=b"Prepress Sup.",
                    ),
                ),
                ("archive_disc", models.CharField(blank=True, max_length=12)),
                (
                    "last_modified",
                    models.DateTimeField(
                        auto_now=True, verbose_name=b"Date Last Modified"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (b"Pending", b"Pending"),
                            (b"Active", b"Active"),
                            (b"Hold", b"Hold"),
                            (b"Complete", b"Complete"),
                            (b"CompleteBilled", b"Complete & Billed"),
                            (b"Cancelled", b"Cancelled"),
                            (b"ClosedATP", b"Closed - Absorbed to Plant"),
                            (b"ClosedATS", b"Closed - Absorbed to Sales"),
                            (b"ClosedBTC", b"Closed - Bill to Customer"),
                        ],
                        default=b"Pending",
                        max_length=100,
                    ),
                ),
                ("comments", models.TextField(blank=True, max_length=5000)),
                ("instructions", models.TextField(blank=True, max_length=5000)),
                ("po_number", models.CharField(blank=True, max_length=100)),
                (
                    "customer_po_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name=b"Customer PO#"
                    ),
                ),
                ("temp_invoiced", models.CharField(blank=True, max_length=50)),
                (
                    "art_rec_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, b"Digital Art via E-mail"),
                            (2, b"Original Art"),
                            (3, b"Art to be created by Clemson"),
                            (4, b"Recreate from Print Sample"),
                            (5, b"ISDN or FTP"),
                            (6, b"Digital art on Disk"),
                            (9, b"Other"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "ship_to_state",
                    localflavor.us.models.USStateField(
                        blank=True, max_length=2, null=True
                    ),
                ),
                ("needs_etools_update", models.BooleanField(default=False)),
                ("anticipated_plant", models.CharField(blank=True, max_length=255)),
                ("keep_upc", models.BooleanField(default=False)),
                ("plantpress_change", models.BooleanField(default=False)),
                (
                    "olmsted_po_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name=b"PO# (Olmsted)"
                    ),
                ),
                (
                    "use_new_bev_nomenclature",
                    models.BooleanField(default=True, verbose_name=b"New Nomenclature"),
                ),
                (
                    "todo_list_mode",
                    models.IntegerField(
                        choices=[(0, b"Default"), (1, b"Stickied"), (2, b"Hidden")],
                        default=0,
                    ),
                ),
                ("user_keywords", models.CharField(blank=True, max_length=500)),
                ("generated_keywords", models.TextField(blank=True, max_length=20000)),
                (
                    "artist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "csr",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="csr_of_job_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "duplicated_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="duplicated_from_job",
                        to="workflow.Job",
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modified_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "printgroup",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qad_data.QAD_PrintGroups",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Jobs",
                "permissions": (
                    ("duplicate_job", "Can duplicate or press change jobs"),
                ),
            },
        ),
        migrations.CreateModel(
            name="JobAddress",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("company", models.CharField(blank=True, max_length=255)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("address1", models.CharField(max_length=255)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("zip", models.CharField(blank=True, max_length=50)),
                ("country", models.CharField(max_length=255)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("ext", models.CharField(blank=True, max_length=15, null=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("cell_phone", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Job"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Job Addresses",
            },
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(blank=True, max_length=50)),
                ("is_in_acs", models.BooleanField(default=False)),
                (
                    "bev_controller",
                    models.ManyToManyField(
                        blank=True,
                        related_name="beverage_controllers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Platemaker",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "contacts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="platemaking_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ManyToManyField(
                        blank=True, related_name="platemaking_sites", to="sites.Site"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlateOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_entered",
                    models.DateField(auto_now_add=True, verbose_name=b"Date Entered"),
                ),
                (
                    "date_needed",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Date Needed"
                    ),
                ),
                ("instructions", models.CharField(blank=True, max_length=250)),
                (
                    "stage1_complete_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Stage1 Complete Date"
                    ),
                ),
                (
                    "stage2_complete_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Stage2 Complete Date"
                    ),
                ),
                ("new_order", models.BooleanField(default=False)),
                (
                    "invoice_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Order Invoice Date"
                    ),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "send_to_plant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="send_to_plant",
                        to="workflow.Plant",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Plate Orders",
                "permissions": (("is_platemaker", "Platemaker"),),
            },
        ),
        migrations.CreateModel(
            name="PlateOrderItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity_needed", models.IntegerField()),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.ItemColor",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.PlateOrder",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlatePackage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platetype",
                    models.CharField(
                        choices=[
                            (b"Conv", b"Conventional Flexo"),
                            (b"Digi", b"Digital Flexo"),
                            (b"DigiLux", b"Digital Lux"),
                            (b"DigiLuxMcD", b"Digital Lux McD"),
                            (b"Rub", b"Rubber Flexo"),
                            (b"Lth", b"Litho"),
                            (b"Grv", b"Gravure"),
                            (b"Off", b"Offset Flexo"),
                            (b"Oth", b"Other"),
                            (b"NA", b"N/A"),
                            (b"Corrugate", b"Corrugated"),
                        ],
                        max_length=50,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "platemaker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.Platemaker",
                    ),
                ),
                (
                    "workflow",
                    models.ManyToManyField(
                        blank=True, related_name="platepackage_sites", to="sites.Site"
                    ),
                ),
            ],
            options={
                "ordering": ["platemaker"],
            },
        ),
        migrations.CreateModel(
            name="Press",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("short_name", models.CharField(max_length=20)),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Presses",
            },
        ),
        migrations.CreateModel(
            name="PrintLocation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Plant"
                    ),
                ),
                (
                    "press",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Press"
                    ),
                ),
            ],
            options={
                "ordering": ["plant"],
            },
        ),
        migrations.CreateModel(
            name="Revision",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name=b"Date Entered"
                    ),
                ),
                ("due_date", models.DateField(verbose_name=b"Due Date")),
                (
                    "complete_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Complete Date"
                    ),
                ),
                ("comments", models.TextField()),
                (
                    "entered_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rev_entered_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
                    ),
                ),
            ],
            options={
                "get_latest_by": "creation_date",
            },
        ),
        migrations.CreateModel(
            name="SalesServiceRep",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="SpecialMfgConfiguration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StepSpec",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eng_num",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name=b"Engineering drawing number",
                    ),
                ),
                (
                    "num_colors",
                    models.IntegerField(
                        blank=True, null=True, verbose_name=b"Number of colors"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            (b"created", b"Created"),
                            (b"checked", b"Checked"),
                            (b"verified", b"Verified"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "template_horizontal",
                    models.FloatField(
                        blank=True, null=True, verbose_name=b"Template width"
                    ),
                ),
                (
                    "template_vertical",
                    models.FloatField(
                        blank=True, null=True, verbose_name=b"Template height"
                    ),
                ),
                ("step_around", models.IntegerField(blank=True, null=True)),
                ("step_across", models.IntegerField(blank=True, null=True)),
                ("print_repeat", models.FloatField(blank=True, null=True)),
                (
                    "num_blanks",
                    models.IntegerField(
                        blank=True, null=True, verbose_name=b"Number of blanks"
                    ),
                ),
                ("comments", models.CharField(blank=True, max_length=500)),
                ("active", models.BooleanField(default=False)),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name=b"Date created"
                    ),
                ),
                (
                    "last_edit",
                    models.DateTimeField(auto_now=True, verbose_name=b"Last edit date"),
                ),
                (
                    "itemspec",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.ItemSpec",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stepspec_edits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "special_mfg",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.SpecialMfgConfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Step and repeat specifications",
            },
        ),
        migrations.CreateModel(
            name="TiffCrop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num_up", models.IntegerField()),
                ("x_size", models.FloatField()),
                ("y_size", models.FloatField()),
                ("x_offset", models.FloatField()),
                ("y_offset", models.FloatField()),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Plant"
                    ),
                ),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.ItemCatalog",
                    ),
                ),
                (
                    "special_mfg",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.SpecialMfgConfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tiff Crop Dimension",
                "verbose_name_plural": "Tiff Crop Dimensions",
            },
        ),
        migrations.CreateModel(
            name="TrackedArt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "art_catagory",
                    models.CharField(
                        choices=[
                            (b"ecotainer", b"Ecotainer Logo"),
                            (b"hold_go", b"Hold & Go Logo"),
                            (b"bpi", b"BPI Logo"),
                            (b"din_certo", b"Din Certo Logo"),
                            (b"sfi", b"SFI Label"),
                            (b"fsc", b"FSC Label"),
                            (b"pefc", b"PEFC Label"),
                            (b"misc_enviro", b"Misc. Enviromental Messaging"),
                        ],
                        max_length=30,
                    ),
                ),
                ("addition_comments", models.CharField(blank=True, max_length=500)),
                (
                    "addition_date",
                    models.DateField(blank=True, null=True, verbose_name=b"Date Added"),
                ),
                ("removal_comments", models.CharField(blank=True, max_length=500)),
                (
                    "removal_date",
                    models.DateField(
                        blank=True, null=True, verbose_name=b"Date Removed"
                    ),
                ),
                (
                    "edited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="edited_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
                    ),
                ),
                (
                    "removed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="removed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="job",
            name="sales_service_rep",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.SalesServiceRep",
                verbose_name=b"Sales Rep.",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="salesperson",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="salesperson",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="temp_platepackage",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.PlatePackage",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="temp_printlocation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.PrintLocation",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="workflow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
            ),
        ),
        migrations.AddField(
            model_name="itemtracker",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.ItemTrackerType",
            ),
        ),
        migrations.AddField(
            model_name="itemspec",
            name="printlocation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.PrintLocation"
            ),
        ),
        migrations.AddField(
            model_name="itemspec",
            name="size",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.ItemCatalog"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="ink_usage",
            field=models.ManyToManyField(
                blank=True, related_name="ink_set", to="workflow.ItemColor"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="job",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.Job"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="plant_reviewer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plant_reviewer",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="platepackage",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.PlatePackage",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="printlocation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.PrintLocation",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="size",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.ItemCatalog"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="special_mfg",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="workflow.SpecialMfgConfiguration",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="steps_with",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="steps_with_item",
                to="workflow.Item",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="workflow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="sites.Site"
            ),
        ),
        migrations.AddField(
            model_name="charge",
            name="description",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.ChargeType"
            ),
        ),
        migrations.AddField(
            model_name="charge",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.Item"
            ),
        ),
        migrations.AddField(
            model_name="bevitemcolorcodes",
            name="size",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="workflow.ItemCatalog"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="stepspec",
            unique_together=set([("itemspec", "special_mfg")]),
        ),
        migrations.AlterUniqueTogether(
            name="itemspec",
            unique_together=set([("size", "printlocation")]),
        ),
    ]
